name: Deploy to Staging

on:
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.mentalspaceehr.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: |
          cd packages/database
          npx prisma generate

      - name: Run database migrations
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          cd packages/database
          npx prisma migrate deploy

      - name: Build backend
        run: |
          cd packages/backend
          npm run build

      - name: Build frontend
        env:
          VITE_API_URL: https://api-staging.mentalspaceehr.com
        run: |
          cd packages/frontend
          npm run build

      - name: Deploy infrastructure
        run: |
          cd infrastructure
          npm ci
          npx cdk deploy --all --require-approval never -c environment=staging

      - name: Deploy backend to Lambda
        run: |
          cd packages/backend
          # Package and deploy Lambda function
          zip -r function.zip dist node_modules
          aws lambda update-function-code \
            --function-name mentalspace-ehr-api-staging \
            --zip-file fileb://function.zip

      - name: Deploy frontend to S3
        run: |
          cd packages/frontend
          aws s3 sync dist/ s3://mentalspace-ehr-frontend-staging --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.STAGING_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Run smoke tests
        run: |
          sleep 30  # Wait for deployment to stabilize
          curl -f https://staging.mentalspaceehr.com/api/v1/health || exit 1
          curl -f https://staging.mentalspaceehr.com/ || exit 1

      - name: Notify deployment
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Staging deployment ${{ job.status }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
